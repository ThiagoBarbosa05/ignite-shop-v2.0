import Head from "next/head";
import { HomeContainer, Product} from "@/styles/pages/home";
import Image from "next/image";

import { useKeenSlider } from "keen-slider/react";
import "keen-slider/keen-slider.min.css";
import { Arrow } from "@/components/Arrow";
import { useState } from "react";
import { stripe } from "@/lib/stripe";
import Stripe from "stripe";
import {  GetStaticProps } from "next";
import Link from "next/link";
import bagProduct from '../assets/bag-card-product.svg'
import { useDispatch, useSelector } from "react-redux";
import {RootState} from '../app/store'
import { addItemToCart } from "@/features/cartSlice";



interface HomeProps {
  products: {
    id: string;
    name: string;
    imageUrl: string;
    price: string;
    defaultPriceId: string
  }[]
}

export default function Home({ products }: HomeProps) {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [loaded, setLoaded] = useState(false);

  
  const dispatch = useDispatch()

  const [sliderRef, instanceRef] = useKeenSlider({
    slides: {
      perView: 2,
      spacing: 48,
    },
    initial: 0,
    slideChanged(slider) {
      setCurrentSlide(slider.track.details.rel);
    },
    created() {
      setLoaded(true);
    },
  });

  function nextSlide(e: any) {
    e.stopPropagation() || instanceRef.current?.next();
  }

  function prevSlide(e: any) {
    e.stopPropagation() || instanceRef.current?.prev();
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <title>Home | Ignite Shop</title>
      </Head>
      <HomeContainer ref={sliderRef} className="keen-slider">
        {products.map((product) => (
          <Product key={product.id} className="keen-slider__slide">
              <Link  href={`/product/${product.id}`} prefetch={false} >
              <Image src={product.imageUrl} width={520} height={480} alt="" />
                 
          </Link>
          <footer>
                <div>
                  <strong>{product.name}</strong>
                  <span>{product.price}</span>
                </div>
                <button onClick={() => dispatch(addItemToCart({...product, quantity: 1}))}>
                  <Image src={bagProduct} width={24} height={24} alt="" />
                </button>
              </footer>   
          </Product>
          
        ))}

        {loaded && instanceRef.current && (
          <Arrow
            left
            next={nextSlide}
            prev={prevSlide}
            isFirstSlide={currentSlide === 0}
          />
        )}
      </HomeContainer>
    </>
  );
}

export const getStaticProps: GetStaticProps = async () => {
  const response = await stripe.products.list({
    expand: ["data.default_price"],
  });

  const products = response.data.map((product) => {
    const price = product.default_price as Stripe.Price;

    return {
      id: product.id,
      name: product.name,
      imageUrl: product.images[0],
      price: new Intl.NumberFormat('pt-BR', {
        style: 'currency',
        currency: 'BRL'
      }).format(price.unit_amount! / 100),
      defaultPriceId: price.id
    };
  });

  return {
    props: {
      products,
    },
    revalidate: 60 * 60 * 2
  };
};
